imperative

kubectl create secret generic app-secret --from-literal=DB_host=mysql

declarative

kubectl create -f

file

apiVersion: v1
kind: Secret
metadata:
    name: app-secret
data:
    DB_Host: mysql
    DB_User: root
    DB_Password: paswrd 

must be enconded so

echo -n mysql | base64

kubectl get secrets

kubectl describe secrets

inject secrets into pods

apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels: 
    app: myapp
    
spec:
  containers:
    - name: nginx-container
      image: nginx

    envFrom:
        - secretRef:
            name: app-config
    
    env: 
        - name: DB_Password
          valueFrom:
            name: app-secret
            key: DB_Password
    
    volumes:
    - name: app-secret-volume
      secret:
        secretName: app-secret
if you create secret as a volume each secret is created as a file in the directory and the value is inside each one of them